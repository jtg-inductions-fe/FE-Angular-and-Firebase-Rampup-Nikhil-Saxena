@use 'sass:math';
@use 'sass:map';
@use 'base/variables' as var;

/// Converts pixel value to rem units
/// @param {Number} $px - Pixel value to convert
/// @param {Number} $base - Base font size (default: 16)
/// @return {Number} - Value in rem units
@function pxToRem($px, $base: 16) {
  @return math.div($px, $base) * 1rem;
}

/// Returns spacing value by key from `var.$spacing` map
/// @param {String|Number} $key - Key to fetch spacing
/// @return {*} - Value from spacing map or null if not found
@function spacing($key) {
  @if map-has-key(var.$spacing, $key) {
    @return map-get(var.$spacing, $key);
  } @else {
    @warn "Spacing key '#{$key}' not found!";
    @return null;
  }
}

/// Mixin: Applies box-shadow with rem unit conversions
/// @param {Number} $x - Horizontal offset (default: 0)
/// @param {Number} $y - Vertical offset (default: 2)
/// @param {Number} $blur - Blur radius (default: 6)
/// @param {Number} $spread - Spread radius (default: 0)
/// @param {Color} $color - Shadow color (default: var.$app-border)
@mixin box-shadow-rem(
  $x: 0,
  $y: 2,
  $blur: 6,
  $spread: 0,
  $color: var.$app-border
) {
  box-shadow: pxToRem($x) pxToRem($y) pxToRem($blur) pxToRem($spread) $color;
}
