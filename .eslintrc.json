{
  "root": true,
  "ignorePatterns": ["projects/**/*", "dist/**/*"],
  "overrides": [
    {
      "files": ["*.ts", "*.component.ts"],
      "extends": [
        "plugin:@angular-eslint/recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:prettier/recommended"
      ],
      "parserOptions": {
        "project": ["tsconfig.json"],
        "createDefaultProgram": true
      },
      "plugins": ["import", "unused-imports"],
      "rules": {
        "no-console": "warn",
        "no-shadow": "error",
        "unused-imports/no-unused-imports": "warn",
        "@typescript-eslint/naming-convention": [
          "error",
          { "selector": "default", "format": ["camelCase"] },
          { "selector": "typeLike", "format": ["PascalCase"] },
          {
            "selector": "variable",
            "modifiers": ["const"],
            "format": ["UPPER_CASE", "camelCase"]
          },
          {
            "selector": "variable",
            "modifiers": ["const"],
            "types": ["function"],
            "format": ["PascalCase"]
          }
        ],
        "import/order": [
          1,
          {
            "groups": [
              "builtin", // Node.js built-ins
              "external", // Angular and third-party packages
              "internal", // Aliased paths or internal libraries
              ["parent", "sibling", "index"] // Relative imports
            ],
            "pathGroups": [
              {
                "pattern": "@angular/**",
                "group": "external",
                "position": "before"
              },
              {
                "pattern": "rxjs",
                "group": "external",
                "position": "after"
              },
              {
                "pattern": "@app/**",
                "group": "internal"
              }
            ],
            "pathGroupsExcludedImportTypes": ["builtin"],
            "alphabetize": { "order": "asc", "caseInsensitive": true },
            "newlines-between": "always"
          }
        ],
        "padding-line-between-statements": [
          "error",
          { "blankLine": "always", "prev": "*", "next": "export" },
          { "blankLine": "always", "prev": "*", "next": "class" }
        ]
      }
    },
    {
      "files": ["*.html"],
      "extends": ["plugin:@angular-eslint/template/recommended"],
      "rules": {
        "@angular-eslint/template/no-negated-async": "error"
      }
    }
  ]
}
